Replit, di Wordpress ada sebuah plugin dengan nama Instant Indexing yang merupakan salah satu plugin dari RankMath dengan fungsi untuk melakukan indexing secara otomatis dari post yang di publish atau di update, kira juga bisa menginput link yang ingin di indexing secara langsung dan mengirimkannya dengan bulk.

Sebenarnya, fitur ini merupakan salah satu fitur di Google Search Console, yang mana kita bisa meminta GSC untuk mengindex link yang kita mau (meminta permintaan indexing), namun di GSC hanya bisa digunakan secara manual satu per satu, sehingga akan memakan waktu.

nah, saya ingin membuat sebuah webapp dengan fungsi yang mirip dengan Instant Indexing dari RankMath tersebut, namun dengan beberapa enhancement. Nantinya, di website ini kita tidak membutuhkan landing page karena merupakan penggunaan pribadi, sehingga cukup dashboard saja dengan url dashboad di /dashboard/user.

Untuk fungsinya sendiri kurang lebih cukup mirip, yang mana yaitu:
1. Menambahkan dan menyimpan service account Google yang digunakan untuk mengirimkan request ke Google Search Console. Email di service account ini nantinya harus ditambahkan di GSC sebagai owner, sehingga kita bisa mengirimkan request untuk melakukan indexing. Bagian ini ada di menu Settings, di bagian setting fields Service Account, user bisa menambahkan lebih dari 1 service account dengan melakukan paste. Untuk service account dalam bentuk JSON, contohnya akan saya berikan nanti.
2. Kemudian, bagian menu lain yaitu IndexNow, yang mana di sini kita bisa membuat request untuk instant indexing atau membuat penjadwalan setiap jam, daily, weekly atau monthly. Nantinya, pada page ini, user bisa mengisi list of url dengan format new line (1 tautan per link), sediakan juga pilihan untuk secara otomatis mendapatkan bulk URL dari sitemap. Jika user memilih ini, user harus memberikan sitemap.xmlnya, kemudian webapp melakukan scrapping url dari sitemap tersebut. Layaknya sitemap, sitemap memiliki structure yang cukup dalam, misalnya seperti salah satu sitemap dibawah ini yang mana yaitu:
Sitemap utama: "https://nexjob.tech/sitemap.xml" yang mana di dalam sitemap utama ini ada 3 pilihan sitemap salah satunya yaitu "https://nexjob.tech/sitemap-loker.xml" dan didalam sitemap "https://nexjob.tech/sitemap-loker.xml" ada kumpulan sitemap lagi seperti "https://nexjob.tech/sitemap-loker-1.xml", "https://nexjob.tech/sitemap-loker-2.xml" dan sebagainya. Nah, di dalam "https://nexjob.tech/sitemap-loker-1.xml" ada tautan dari post/pagenya, tautan-tautan di dalam sini yang harus webapp scrape. Sehingga, intinya kita harus melakukan/mendaapatkan tautan terdalam dari sitemapnya. Nah, di IndexNow, user nantinya bisa juga melaukan IndexNow untuk one time, sehingga hanya di request 1x untuk masing-masing URL, jika schedule tiap interval berarti akan melakukan re-request tiap interval untuk masing-masing URL.
3. Nah, masing-masing service account memiliki batansannya, seperti limit, misalnya Public Request per day 200, read request per minute 60, request per minute 380. Saya ingin informasi ini juga ditampilkan di IndexNow sehingga user bisa tahu quota service account mereka. Jadi, jangan lupa buat fungsi untuk melakukan/mendapatkan quota saat ini. Jika user menambahkan lebih dari 1 service account, maka gabungkan hasil akhirnya.
4. Kemudian, tetap di halaman IndexNow, apabila user sudah membuat/menjadwalkan IndexNow request, baik one-time atau schedule, dibagian bawah tunjukan seperti listnya, misalnya seperti nomor, tanggal request, one-time/schedule every x interval, status, dan progress bar dan progress percentage. Tambahkan tombol action untuk melihat detail lebih dalam, mengedit informasi seperti tautan/sitemap, interval, membatlkan, mempause, menghapus. Bila detail lebih lanjut di pilih, arahkan ke halaman lain yang menunjukan proses dari IndexNow lebih deepth, misalnya perkiraan selesai, list url yang sudah di index/di request, dan lain-lain. Oh ya, karena tiap service account memiliki batasan quota, jadi misalnya jumlah tautan lebih besar dari quota service account maka dengan begitu tidak akan bisa selesai dalam sekali jalan, sehingga untuk proses request selanjutnya dimulai dari link yang belum di request dari batch sebelumnya. Misalnya, dari batch pertama mengirimkan 200 link mulai dari link 1 sampai link 200, kemudian quota sudah terpakai semuanya, saat interval selanjutnya maka dimulai dari 201 sampai seterusnya. Jika interval misalnya tiap 1 jam, tapi quota masih habis, maka tulis Quota Excedeed atau sejenisnya dan akan dicoba lagi di interval selanjutnya sampai bisa. Sehingga, semua url harus di request dulu baru bisa ke batch baru yang dimulai dari url ke 1. Namun, hal tersebut bisa di skip apabila url yang akan di request itu error, misalnya seperti service account belum ditambahkan sebagai owner, url post error atau hal lain seperti meta robots no index, dan error lain, sehingga nanti tulisan statusnya menjadi Error. Bila ada yang error, webapp tetap bisa melanjutkan IndexNow process di batch selanjutnya tanpa harus menunggu url tersebut berstatus sukses, sehingga proses untuk indexing tiap interval tidak terjeda karena hal yang error tersebut.
5. Untuk database dan auth management, gunakan supabase dengan informasi sebagai berikut:
Project URL: https://bwkasvyrzbzhcdtvsbyg.supabase.co
API key (anon public): eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ3a2FzdnlyemJ6aGNkdHZzYnlnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI3NTUxNDIsImV4cCI6MjA2ODMzMTE0Mn0._YnFB_X6glA_67HRBcPQIVJ0lzcOQ5PinZzilecvB98
service_role key: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ3a2FzdnlyemJ6aGNkdHZzYnlnIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mjc1NTE0MiwiZXhwIjoyMDY4MzMxMTQyfQ.oq8nyR7VVuxPjquZr_PSGBBniCRwSrQ_3kgnW92iZXg
Direct connection string: postgresql://postgres:Jembut123!@db.bwkasvyrzbzhcdtvsbyg.supabase.co:5432/postgres
Transaction Pooler: postgresql://postgres.bwkasvyrzbzhcdtvsbyg:Jembut123!@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
Session Pooler: postgresql://postgres.bwkasvyrzbzhcdtvsbyg:Jembut123!@aws-0-ap-southeast-1.pooler.supabase.com:5432/postgres
Berhubung saya belum membuat tables dan RLS di Supabase, pastikan untuk memberikan SQL queries menambahkan dan membuat hal tersebut agar saya bisa menambahkannya secara manual bila perlu.
6. Untuk design dashboard, pastikan dashboard clean, professional dengan color schema ke arah warm dan putih, tambahkan sidebar menu yang bisa di collapse dan exapand dengan icon. Bila di collapsed maka akan menampilkan iconnya saja tanpa teks menu. Untuk di halaman utama dashboard, buat live/real-time statistic yang diambil dari DB dan tambahkan shortcut menu yang menarik dan juga membantu user.
7. Kemudian, berkaitan dengan Supabase database and authentication, jangan buat direct connection, tapi buat API layering, sehingga endpoint dari Supabase tidak ter-ekekspose di network tree. Untuk login dan sign up gunakan email password dan magic link.

Berikut contoh service account JSON:
{
  "type": "service_account",
  "project_id": "nexpocket",
  "private_key_id": "518d889eb2232125fa654b23171f43247b5315cf",
  "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCRX/pTmUia3vly\n7FUvtG5Cld2swxrBwWxqFl6S4kYdmmpWluwNx2x125bfCYD2tg8NqZ5AT+4kn2A0\n/J+CtU2ce/reZ5C6FPCav10QllKvkwDrcF7DAAegmw7zniyyo/jdjsWjqZ+s/yol\nYbPGFmB1M8fIgLaFM7OgNw2YPlqle8HwJ28R+Pn+5kJOCW+r4QB5wQvPX7kdTJdn\nc3zzobAZi5Z1IEEw3cO/NO7wlCEsyFXFrHTDy5vfYOlS3WjNyI7juJEt2w5Zt/j3\nALVVsaGHIGCLqRl7HCCRlRcVGkeZ0VOAJHeiQohAOLuQyemWZnFf38aW01hetLyX\nXLucDplLAgMBAAECggEAAtUv2rOmzkAMhsuGnpD5OHvkEdTkM+rpcgFKuhrzaqDU\nVaKphSuYyoB40TEhK3CWqMpaZFDnXaLxmFCh+3YliOteHznP4fZ5u61EdSx6Ozx4\n2SnSWAl0ln+KbyPkq6baUV3FzLdK4AG7ilIsxxjNq/4JEw2CE0Y1NZBmNZuiNI2P\nSQG2UimAPTi+wvKNw40UGUGQaY+zfr/DpYrynJ3LxeuevX7/qXzgK9W86dLRokzE\nC5KxlI0FIw1gnsD+7kWKYNDBS+rlw8otUjCK5Qo+KNnzreX4BElxyLGSTLFSJlr7\novbLa0YO2TMKKdHGaZVAJ0T2rQnJOFxEpVkkC+W9QQKBgQDHZIgDj6EqHAixO+Ta\n2P7QfSDAz1QtJxU1B3Qh6N3lx6vApGmKojFKJ68O+exfzz3b+OaeawY+j6//2WV1\nA5jpTYVFW5ceOGpj1ZNchR67pv4yJIuawi369T9/b3SAR5KKhsGAWk2/grd8ftEv\nEW2G8fr4iOXtiu91pwCe7z7OWwKBgQC6pYpJYR79wJILIM8Ud/jX1LJc5H3/2nPr\nw4lqIq5n68d+nCZDOPphR4ctAobV5M0wcGl4QwUPQAc72QXd1Bh99Rte+BXRp9qG\nCC1YJ2J4W0CaOWxNpM0Vxm1QqyouokKpinQ5cGbVEdEjmM8oYw6F5yZqL4MyYczw\n7nlsq8Qz0QKBgQDFfPYWiNj4y0F0wbzfYdOojna1YeSewDoKBvLobyvw3b5olK+Q\nRysIppuF+tY64xoC2NkaiShrKIgKobkSl9iJI2Xfl2Lq5LfDYBOPrK4O8MyOv5Gi\nW7eM/AHDZ5H9SGaFXAkl5stg5shzv2vS8bEI2n1YUsdhap3Yaut7f702RwKBgQCB\noiQv3wK1X6CPlhP9tW3iCdpv5ksU/tbwcvjn/HqBtyLx7uYsXlCYbCOYwV6BBM72\ny7yVSIclFmVvzcXjUkJIiYqfJVOSMDD4Uomb5o7f5REzjJqKOuIuM4kNNDSx+wSt\n2HnswwLJDfzh6mpHNLWLjwYBTkqjHYZH+HnhXlOBYQKBgAfU5XmBZ+DVmYg+Aum0\nRqFpmpCSo7fdVI2cNCcv8Zj+BiKqVNn1zKYeYGQcK8BWnxxeXcDRR7iX4IPKomz4\ndPrT9SJnBfjjMxxaqUHmz1Hu79shlX9YLSF86TDpMHKIHqw1SQIHXBAZGedtb6lA\n0lKZPrKH8hq72daMP2Uze9AS\n-----END PRIVATE KEY-----\n",
  "client_email": "rm-instant-indexing@nexpocket.iam.gserviceaccount.com",
  "client_id": "116555367844383019015",
  "auth_uri": "https://accounts.google.com/o/oauth2/auth",
  "token_uri": "https://oauth2.googleapis.com/token",
  "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
  "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/rm-instant-indexing%40nexpocket.iam.gserviceaccount.com",
  "universe_domain": "googleapis.com"
}
